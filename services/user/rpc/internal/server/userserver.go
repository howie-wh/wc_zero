// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"wczero/services/user/rpc/internal/logic"
	"wczero/services/user/rpc/internal/svc"
	"wczero/services/user/rpc/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) WeChatLogin(ctx context.Context, in *user.WeChatLoginRequest) (*user.WeChatLoginResponse, error) {
	l := logic.NewWeChatLoginLogic(ctx, s.svcCtx)
	return l.WeChatLogin(in)
}

func (s *UserServer) AdminLogin(ctx context.Context, in *user.AdminLoginRequest) (*user.AdminLoginResponse, error) {
	l := logic.NewAdminLoginLogic(ctx, s.svcCtx)
	return l.AdminLogin(in)
}

func (s *UserServer) AdminRegister(ctx context.Context, in *user.AdminRegisterRequest) (*user.AdminRegisterResponse, error) {
	l := logic.NewAdminRegisterLogic(ctx, s.svcCtx)
	return l.AdminRegister(in)
}

func (s *UserServer) AdminUserInfo(ctx context.Context, in *user.AdminUserInfoRequest) (*user.AdminUserInfoResponse, error) {
	l := logic.NewAdminUserInfoLogic(ctx, s.svcCtx)
	return l.AdminUserInfo(in)
}

func (s *UserServer) QINIUUploadToken(ctx context.Context, in *user.QINIUUploadTokenRequest) (*user.QINIUUploadTokenResponse, error) {
	l := logic.NewQINIUUploadTokenLogic(ctx, s.svcCtx)
	return l.QINIUUploadToken(in)
}
