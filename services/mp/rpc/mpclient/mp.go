// Code generated by goctl. DO NOT EDIT!
// Source: mp.proto

package mpclient

import (
	"context"

	"wczero/services/mp/rpc/mp"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MPTextMsgRequest  = mp.MPTextMsgRequest
	MPTextMsgResponse = mp.MPTextMsgResponse

	MP interface {
		MPTextMsg(ctx context.Context, in *MPTextMsgRequest, opts ...grpc.CallOption) (*MPTextMsgResponse, error)
	}

	defaultMP struct {
		cli zrpc.Client
	}
)

func NewMP(cli zrpc.Client) MP {
	return &defaultMP{
		cli: cli,
	}
}

func (m *defaultMP) MPTextMsg(ctx context.Context, in *MPTextMsgRequest, opts ...grpc.CallOption) (*MPTextMsgResponse, error) {
	client := mp.NewMPClient(m.cli.Conn())
	return client.MPTextMsg(ctx, in, opts...)
}
